{
  "openapi": "3.0.3",
  "info": {
    "title": "MOOST Public API",
    "description": "Moost Recommender Platform Open-API specification for public API's",
    "contact": {
      "url": "https://www.moost.io/contact"
    },
    "version": "latest"
  },
  "servers": [
    {
      "url": "https://api.moost.io"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/token/v1": {
      "get": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Receive a new access token",
        "operationId": "tokenV1",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{1,100}$"
            }
          },
          {
            "name": "clientSecret",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]{1,100}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Valid access token obtained.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Client id or secret is invalid."
          },
          "500": {
            "description": "Server error. Failed to obtain a valid access token."
          }
        }
      }
    },
    "/buildings/{customerBuildingId}/rules/{ruleId}/v1": {
      "put": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Activate or deactivate a rule for a building",
        "operationId": "setRuleActivityForBuilding",
        "parameters": [
          {
            "name": "customerBuildingId",
            "in": "path",
            "description": "Set rule activity of specified building.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ID of the target rule.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{24}$"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Set status. Valid values are: \"active\", \"inactive\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Rule activity updated."
          },
          "404": {
            "description": "Building could not be found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/buildings/{customerBuildingId}/devices/v1": {
      "put": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Attach a set of devices to a building",
        "operationId": "setDevices",
        "parameters": [
          {
            "name": "customerBuildingId",
            "in": "path",
            "description": "Set devices of specified building.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success. Devices updated."
          },
          "404": {
            "description": "Building could not be found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/buildings/v1": {
      "get": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Get all buildings",
        "operationId": "getBuildings",
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Building"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Update a building",
        "operationId": "updateBuilding",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Building"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success. Building updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            }
          },
          "404": {
            "description": "Building could not be found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Create a building",
        "operationId": "createBuilding",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Building"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success. Building created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            }
          },
          "409": {
            "description": "Conflict. Building already exists."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/rules/v1": {
      "get": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Get all rules",
        "operationId": "getAllRulesV1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rule"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pushnotifications/{pushNotificationId}/interactions/v1": {
      "post": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Save an interaction on a delivered push notification",
        "operationId": "postPushNotificationInteraction",
        "parameters": [
          {
            "name": "pushNotificationId",
            "in": "path",
            "description": "Select specified notification.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{24}$"
            }
          }
        ],
        "requestBody": {
          "description": "Save specified interaction. The interaction has to be of form: `{\"actionQualifier\": \"DISMISS\"}`.<br/>Valid actionQualifier values are: \"DISMISS\", \"OPENAPP\", \"STOPDELIVERY\", \"OPENWEB\"",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnsanitizedPushNotificationInteraction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/pushnotifications/buildings/{customerBuildingId}/v1": {
      "get": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Get push notifications of a building",
        "operationId": "getPushNotificationsByCustomerBuildingId",
        "parameters": [
          {
            "name": "customerBuildingId",
            "in": "path",
            "description": "Select notifications of specified building.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
            }
          },
          {
            "name": "deliveryStatus",
            "in": "query",
            "description": "If specified, then filter for notifications with specified status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DELIVERED",
                "DROPPED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PushNotification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/buildings/{customerBuildingId}/v1": {
      "get": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Get a building",
        "operationId": "getBuilding",
        "parameters": [
          {
            "name": "customerBuildingId",
            "in": "path",
            "description": "Select specified building.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Delete a building",
        "operationId": "deleteBuilding",
        "parameters": [
          {
            "name": "customerBuildingId",
            "in": "path",
            "description": "Delete specified building.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Building deleted."
          },
          "404": {
            "description": "Building could not be found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/buildings/{customerBuildingId}/rules/v2": {
      "get": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Get all active rules of a building",
        "operationId": "getActiveRulesOfBuilding",
        "parameters": [
          {
            "name": "customerBuildingId",
            "in": "path",
            "description": "Load active rules of specified building.",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Active rules loaded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rule"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Building could not be found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/events/v1": {
      "post": {
        "tags": [
          "PublicAPI"
        ],
        "summary": "Add an event to a building",
        "operationId": "addEventV1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "GrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "accountNonExpired": {
            "type": "boolean"
          },
          "accountNonLocked": {
            "type": "boolean"
          },
          "credentialsNonExpired": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,100}$"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "scope": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "enum": [
              "Bearer",
              "mac"
            ]
          }
        }
      },
      "Dataset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,100}$"
          },
          "description": {
            "type": "string",
            "pattern": "^.{0,100}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "SINGLEVALUE",
              "TIMESERIES"
            ]
          },
          "source_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPLIANCE",
                "BATTERY",
                "CAR",
                "CAR_CHARGER",
                "ENERGY_MEASUREMENT",
                "GATEWAY",
                "HEAT_PUMP",
                "INPUT_DEVICE",
                "INVERTER",
                "MOOST",
                "SMART_METER",
                "SMART_PLUG",
                "SWITCH",
                "THERMOSTAT",
                "THERMAL_ZONE",
                "THERMAL_STORAGE",
                "WATER_HEATER",
                "WALL_TABLET",
                "SOLAR_PANEL",
                "DISHWASHER",
                "DRYER",
                "ENTERTAINMENT",
                "LIGHTING",
                "OVEN",
                "REFRIGERATION",
                "WASHING_MACHINE"
              ]
            }
          },
          "event_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CHARGING_MODE",
                "DEVICE_STATUS",
                "ENERGY_CONSUMPTION",
                "ENERGY_CONSUMPTION_LAST_24H",
                "ENERGY_CONSUMPTION_YESTERDAY",
                "ENERGY_EXCESS_LAST_24H",
                "ENERGY_EXCESS_YESTERDAY",
                "ENERGY_GENERATION_LAST_24H",
                "ENERGY_GENERATION_YESTERDAY",
                "ENERGY_IMPORT",
                "ENERGY_IMPORT_YESTERDAY",
                "ENERGY_EXPORT",
                "ENERGY_EXPORT_YESTERDAY",
                "EXPECTED_OUTSIDE_TEMPERATURE",
                "EXPECTED_OUTSIDE_TEMPERATURE_4DAYS",
                "GRID_POWER_CONSUMPTION",
                "GRID_POWER_CONSUMPTION_ANOMALY_SCORE",
                "IS_LOW_TARIFF_HOURS",
                "POWER_CONSUMPTION",
                "POWER_CONSUMPTION_FORECAST_1H",
                "POWER_CONSUMPTION_FORECAST_24H",
                "POWER_EXCESS",
                "POWER_GENERATION",
                "POWER_GENERATION_FORECAST_1H",
                "POWER_GENERATION_FORECAST_1H_MIN",
                "POWER_GENERATION_FORECAST_24H",
                "POWER_GENERATION_FORECAST_48H",
                "POWER_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
                "POWER_GENERATION_FORECAST_TOMORROW",
                "SELF_CONSUMPTION_RATE",
                "SELF_CONSUMPTION_RATE_YESTERDAY",
                "SELF_SUFFICIENCY_RATE",
                "SELF_SUFFICIENCY_RATE_YESTERDAY",
                "STATE_OF_CHARGE_FORECAST_RATE",
                "STATE_OF_CHARGE_RATE",
                "SWITCH_STATE",
                "TEMPERATURE",
                "WATER_TEMPERATURE",
                "POWER_CONSUMPTION_BASE_LOAD",
                "DYNAMIC_TARIFF_PRICE",
                "DYNAMIC_TARIFF_PRICE_FORECAST_1H",
                "DYNAMIC_TARIFF_LOWEST_PRICE_FORECAST_TOMORROW",
                "IS_HIGH_TARIFF_HOURS",
                "ENERGY_EXCESS",
                "ENERGY_BASE_CONSUMPTION",
                "ENERGY_CONSUMPTION_FORECAST_1H",
                "ENERGY_CONSUMPTION_FORECAST_24H",
                "ENERGY_GENERATION",
                "ENERGY_GENERATION_FORECAST_1H",
                "ENERGY_GENERATION_FORECAST_24H",
                "GRID_ENERGY_CONSUMPTION",
                "GRID_ENERGY_CONSUMPTION_YESTERDAY",
                "GRID_ENERGY_CONSUMPTION_ANOMALY_SCORE",
                "GRID_ENERGY_BASE_CONSUMPTION",
                "ENERGY_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
                "ENERGY_GENERATION_FORECAST_TOMORROW",
                "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW_HOURLY",
                "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW",
                "ENERGY_CONSUMPTION_FORECAST_TOMORROW",
                "ENERGY_CONSUMPTION_FORECAST_DAY_AFTER_TOMORROW"
              ]
            }
          },
          "timeframe": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "event_types",
          "name",
          "source_types",
          "timeframe",
          "type"
        ]
      },
      "MessageQueueSetting": {
        "type": "object",
        "properties": {
          "isOverflowProtectionActive": {
            "type": "boolean"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "actionQualifier": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "DISMISS",
                "OPENAPP",
                "STOPDELIVERY",
                "OPENWEB"
              ]
            }
          },
          "texts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NotificationTexts"
            }
          },
          "command": {
            "type": "string",
            "pattern": "^[\\s\\S]{0,10000}$"
          }
        }
      },
      "NotificationAction": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "pattern": "^[\\s\\S]{1,10000}$"
          },
          "parameter": {
            "type": "string",
            "pattern": "^[\\s\\S]{0,10000}$"
          }
        }
      },
      "NotificationTexts": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "pattern": "^[\\s\\S]{1,10000}$"
          },
          "message": {
            "type": "string",
            "pattern": "^[\\s\\S]{1,10000}$"
          },
          "actions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NotificationAction"
            }
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "name": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "description": {
            "type": "string",
            "pattern": "^[\\s\\S]{0,10000}$"
          },
          "ruleState": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "PAUSE"
            ]
          },
          "notification": {
            "$ref": "#/components/schemas/Notification"
          },
          "match_threshold": {
            "type": "integer",
            "format": "int32"
          },
          "time_between_triggers_seconds": {
            "type": "integer",
            "format": "int64"
          },
          "resetStateWhenMatched": {
            "type": "boolean"
          },
          "condition": {
            "type": "string",
            "pattern": "^[\\s\\S]{1,10000}$"
          },
          "streakCondition": {
            "type": "string",
            "pattern": "^[\\s\\S]{0,10000}$"
          },
          "isRestrictedToEarlyAdopters": {
            "type": "boolean"
          },
          "isTimeBased": {
            "type": "boolean"
          },
          "timeBasedCron": {
            "type": "string"
          },
          "messageQueueSetting": {
            "$ref": "#/components/schemas/MessageQueueSetting"
          },
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dataset"
            }
          },
          "topicIcon": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,50}$"
          },
          "impactIcon": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,50}$"
          },
          "templateRuleId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          }
        },
        "required": [
          "condition",
          "customerId",
          "name"
        ]
      },
      "FulfillmentPreferences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "customerBuildingId": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "restApiToken": {
            "type": "string"
          },
          "restBearerToken": {
            "type": "string"
          },
          "restBasicAuthUser": {
            "type": "string"
          },
          "restBasicAuthPassword": {
            "type": "string"
          },
          "restHostname": {
            "type": "string"
          },
          "restPath": {
            "type": "string"
          },
          "restIsSecure": {
            "type": "boolean"
          },
          "restAuthStrategy": {
            "type": "string",
            "enum": [
              "APITOKEN",
              "BEARER",
              "BASIC"
            ]
          },
          "recipientEmailAddress": {
            "type": "string"
          },
          "htmlEmailTemplateName": {
            "type": "string"
          },
          "fcmToken": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "REST",
              "EMAIL",
              "HTML_EMAIL",
              "FIREBASE_CLOUD_MESSAGING"
            ]
          },
          "disabledRuleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "customerId"
        ]
      },
      "RuleUserRelation": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._-]{3,64}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "APPLIANCE",
              "BATTERY",
              "CAR",
              "CAR_CHARGER",
              "ENERGY_MEASUREMENT",
              "GATEWAY",
              "HEAT_PUMP",
              "INPUT_DEVICE",
              "INVERTER",
              "MOOST",
              "SMART_METER",
              "SMART_PLUG",
              "SWITCH",
              "THERMOSTAT",
              "THERMAL_ZONE",
              "THERMAL_STORAGE",
              "WATER_HEATER",
              "WALL_TABLET",
              "SOLAR_PANEL",
              "DISHWASHER",
              "DRYER",
              "ENTERTAINMENT",
              "LIGHTING",
              "OVEN",
              "REFRIGERATION",
              "WASHING_MACHINE"
            ]
          },
          "vendor_name": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "name": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "product_name": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "metadata": {
            "type": "string",
            "pattern": "^.{0,1000}$"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "soc": {
            "type": "number",
            "format": "float"
          },
          "chargingTargetSoc": {
            "type": "number",
            "format": "float"
          },
          "chargingTargetSocTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "chargingMode": {
            "type": "integer",
            "format": "int32"
          },
          "capacity": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "id",
          "name",
          "product_name",
          "type",
          "vendor_name"
        ]
      },
      "Building": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerBuildingId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "zip": {
            "type": "string",
            "pattern": "^[A-Z0-9 -]{3,10}$"
          },
          "city": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "countryCode": {
            "type": "string",
            "pattern": "^[A-Z]{2}$"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          },
          "geolocation": {
            "$ref": "#/components/schemas/Geolocation"
          },
          "timeZoneId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9/_+-]{1,32}$"
          },
          "inactiveRules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deactivatedTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "activationTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "registrationTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "customerSubscriptionName": {
            "type": "string"
          },
          "isEarlyAdopter": {
            "type": "boolean"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disabledNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleUserRelation"
            }
          }
        },
        "required": [
          "city",
          "countryCode",
          "customerBuildingId",
          "customerId",
          "zip"
        ]
      },
      "DualTariffSetting": {
        "type": "object",
        "properties": {
          "lowTariff": {
            "$ref": "#/components/schemas/LowTariffSetting"
          }
        }
      },
      "DynamicTariff": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number"
          },
          "from": {
            "type": "integer",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DynamicTariffSetting": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicTariff"
            }
          }
        }
      },
      "Geolocation": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LowTariffSetting": {
        "type": "object",
        "properties": {
          "mondayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "mondayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "tuesdayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "tuesdayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "wednesdayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "wednesdayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "thursdayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "thursdayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "fridayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "fridayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "saturdayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "saturdayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "sundayStartTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          },
          "sundayEndTime": {
            "type": "string",
            "pattern": "^[0-9][0-9]:[0-9][0-9]$"
          }
        },
        "required": [
          "fridayEndTime",
          "fridayStartTime",
          "mondayEndTime",
          "mondayStartTime",
          "saturdayEndTime",
          "saturdayStartTime",
          "sundayEndTime",
          "sundayStartTime",
          "thursdayEndTime",
          "thursdayStartTime",
          "tuesdayEndTime",
          "tuesdayStartTime",
          "wednesdayEndTime",
          "wednesdayStartTime"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "multiPersonScore": {
            "type": "number",
            "format": "double"
          },
          "ecologicalScore": {
            "type": "number",
            "format": "double"
          },
          "economicalScore": {
            "type": "number",
            "format": "double"
          },
          "selfSufficiencyScore": {
            "type": "number",
            "format": "double"
          },
          "commercialBuildingScore": {
            "type": "number",
            "format": "double"
          },
          "gridPowerConsumptionClusterId": {
            "type": "integer",
            "format": "int32"
          },
          "consumptionCategory": {
            "type": "string",
            "enum": [
              "HIGH",
              "MEDIUM",
              "LOW"
            ]
          }
        }
      },
      "Settings": {
        "type": "object",
        "properties": {
          "tariff": {
            "$ref": "#/components/schemas/TariffSettings"
          }
        }
      },
      "TariffSettings": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "SINGLE",
              "DUAL",
              "DYNAMIC"
            ]
          },
          "minPrice": {
            "type": "number"
          },
          "maxPrice": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$"
          },
          "dual": {
            "$ref": "#/components/schemas/DualTariffSetting"
          },
          "dynamic": {
            "$ref": "#/components/schemas/DynamicTariffSetting"
          }
        },
        "required": [
          "type"
        ]
      },
      "UnsanitizedPushNotificationInteraction": {
        "type": "object",
        "properties": {
          "actionQualifier": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._@-]{1,100}$"
          }
        }
      },
      "Streak": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "customerBuildingId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "streakCounter": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "customerBuildingId",
          "customerId",
          "ruleId"
        ]
      },
      "RuleHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "username": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._@-]{1,100}$"
          }
        },
        "required": [
          "customerId",
          "rule",
          "ruleId",
          "username"
        ]
      },
      "PushNotification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "customerBuildingId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
          },
          "ruleId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "priority": {
            "type": "string",
            "enum": [
              "high",
              "normal"
            ]
          },
          "createdAtTimeMillis": {
            "type": "integer",
            "format": "int64"
          },
          "interaction": {
            "$ref": "#/components/schemas/PushNotificationInteraction"
          },
          "ingestionTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "notification": {
            "$ref": "#/components/schemas/Notification"
          },
          "delivery_status": {
            "$ref": "#/components/schemas/PushNotificationDeliveryStatus"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "customerBuildingId",
          "customerId",
          "ruleId"
        ]
      },
      "PushNotificationDeliveryStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "DELIVERED",
              "DROPPED"
            ]
          },
          "reason": {
            "type": "string",
            "pattern": "^.{0,100}$"
          }
        }
      },
      "PushNotificationInteraction": {
        "type": "object",
        "properties": {
          "actionQualifier": {
            "type": "string",
            "enum": [
              "DISMISS",
              "OPENAPP",
              "STOPDELIVERY",
              "OPENWEB"
            ]
          },
          "userId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._@-]{1,100}$"
          }
        }
      },
      "PushNotificationsResponse": {
        "type": "object",
        "properties": {
          "pushNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PushNotification"
            }
          },
          "totalPushNotifications": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LanguageInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CountByRule": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CountByRulePerTime": {
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "ruleId": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CountByInteraction": {
        "type": "object",
        "properties": {
          "interaction": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CountByInteractionPerTime": {
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "interaction": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CountByDeliveryStatusReason": {
        "type": "object",
        "properties": {
          "deliveryStatus": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{24}$"
          },
          "customerBuildingId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._-]{1,100}$"
          },
          "deviceId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9:._-]{3,64}$"
          },
          "deviceName": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "value": {
            "type": "number",
            "format": "float"
          },
          "type": {
            "type": "string",
            "enum": [
              "CHARGING_MODE",
              "DEVICE_STATUS",
              "ENERGY_CONSUMPTION",
              "ENERGY_CONSUMPTION_LAST_24H",
              "ENERGY_CONSUMPTION_YESTERDAY",
              "ENERGY_EXCESS_LAST_24H",
              "ENERGY_EXCESS_YESTERDAY",
              "ENERGY_GENERATION_LAST_24H",
              "ENERGY_GENERATION_YESTERDAY",
              "ENERGY_IMPORT",
              "ENERGY_IMPORT_YESTERDAY",
              "ENERGY_EXPORT",
              "ENERGY_EXPORT_YESTERDAY",
              "EXPECTED_OUTSIDE_TEMPERATURE",
              "EXPECTED_OUTSIDE_TEMPERATURE_4DAYS",
              "GRID_POWER_CONSUMPTION",
              "GRID_POWER_CONSUMPTION_ANOMALY_SCORE",
              "IS_LOW_TARIFF_HOURS",
              "POWER_CONSUMPTION",
              "POWER_CONSUMPTION_FORECAST_1H",
              "POWER_CONSUMPTION_FORECAST_24H",
              "POWER_EXCESS",
              "POWER_GENERATION",
              "POWER_GENERATION_FORECAST_1H",
              "POWER_GENERATION_FORECAST_1H_MIN",
              "POWER_GENERATION_FORECAST_24H",
              "POWER_GENERATION_FORECAST_48H",
              "POWER_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
              "POWER_GENERATION_FORECAST_TOMORROW",
              "SELF_CONSUMPTION_RATE",
              "SELF_CONSUMPTION_RATE_YESTERDAY",
              "SELF_SUFFICIENCY_RATE",
              "SELF_SUFFICIENCY_RATE_YESTERDAY",
              "STATE_OF_CHARGE_FORECAST_RATE",
              "STATE_OF_CHARGE_RATE",
              "SWITCH_STATE",
              "TEMPERATURE",
              "WATER_TEMPERATURE",
              "POWER_CONSUMPTION_BASE_LOAD",
              "DYNAMIC_TARIFF_PRICE",
              "DYNAMIC_TARIFF_PRICE_FORECAST_1H",
              "DYNAMIC_TARIFF_LOWEST_PRICE_FORECAST_TOMORROW",
              "IS_HIGH_TARIFF_HOURS",
              "ENERGY_EXCESS",
              "ENERGY_BASE_CONSUMPTION",
              "ENERGY_CONSUMPTION_FORECAST_1H",
              "ENERGY_CONSUMPTION_FORECAST_24H",
              "ENERGY_GENERATION",
              "ENERGY_GENERATION_FORECAST_1H",
              "ENERGY_GENERATION_FORECAST_24H",
              "GRID_ENERGY_CONSUMPTION",
              "GRID_ENERGY_CONSUMPTION_YESTERDAY",
              "GRID_ENERGY_CONSUMPTION_ANOMALY_SCORE",
              "GRID_ENERGY_BASE_CONSUMPTION",
              "ENERGY_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
              "ENERGY_GENERATION_FORECAST_TOMORROW",
              "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW_HOURLY",
              "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW",
              "ENERGY_CONSUMPTION_FORECAST_TOMORROW",
              "ENERGY_CONSUMPTION_FORECAST_DAY_AFTER_TOMORROW"
            ]
          },
          "source": {
            "type": "string",
            "enum": [
              "APPLIANCE",
              "BATTERY",
              "CAR",
              "CAR_CHARGER",
              "ENERGY_MEASUREMENT",
              "GATEWAY",
              "HEAT_PUMP",
              "INPUT_DEVICE",
              "INVERTER",
              "MOOST",
              "SMART_METER",
              "SMART_PLUG",
              "SWITCH",
              "THERMOSTAT",
              "THERMAL_ZONE",
              "THERMAL_STORAGE",
              "WATER_HEATER",
              "WALL_TABLET",
              "SOLAR_PANEL",
              "DISHWASHER",
              "DRYER",
              "ENTERTAINMENT",
              "LIGHTING",
              "OVEN",
              "REFRIGERATION",
              "WASHING_MACHINE"
            ]
          },
          "forecastTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "ingestionTimestamp": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "customerBuildingId",
          "customerId",
          "deviceId",
          "deviceName",
          "type",
          "value"
        ]
      },
      "CountByGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "computedEventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CHARGING_MODE",
                "DEVICE_STATUS",
                "ENERGY_CONSUMPTION",
                "ENERGY_CONSUMPTION_LAST_24H",
                "ENERGY_CONSUMPTION_YESTERDAY",
                "ENERGY_EXCESS_LAST_24H",
                "ENERGY_EXCESS_YESTERDAY",
                "ENERGY_GENERATION_LAST_24H",
                "ENERGY_GENERATION_YESTERDAY",
                "ENERGY_IMPORT",
                "ENERGY_IMPORT_YESTERDAY",
                "ENERGY_EXPORT",
                "ENERGY_EXPORT_YESTERDAY",
                "EXPECTED_OUTSIDE_TEMPERATURE",
                "EXPECTED_OUTSIDE_TEMPERATURE_4DAYS",
                "GRID_POWER_CONSUMPTION",
                "GRID_POWER_CONSUMPTION_ANOMALY_SCORE",
                "IS_LOW_TARIFF_HOURS",
                "POWER_CONSUMPTION",
                "POWER_CONSUMPTION_FORECAST_1H",
                "POWER_CONSUMPTION_FORECAST_24H",
                "POWER_EXCESS",
                "POWER_GENERATION",
                "POWER_GENERATION_FORECAST_1H",
                "POWER_GENERATION_FORECAST_1H_MIN",
                "POWER_GENERATION_FORECAST_24H",
                "POWER_GENERATION_FORECAST_48H",
                "POWER_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
                "POWER_GENERATION_FORECAST_TOMORROW",
                "SELF_CONSUMPTION_RATE",
                "SELF_CONSUMPTION_RATE_YESTERDAY",
                "SELF_SUFFICIENCY_RATE",
                "SELF_SUFFICIENCY_RATE_YESTERDAY",
                "STATE_OF_CHARGE_FORECAST_RATE",
                "STATE_OF_CHARGE_RATE",
                "SWITCH_STATE",
                "TEMPERATURE",
                "WATER_TEMPERATURE",
                "POWER_CONSUMPTION_BASE_LOAD",
                "DYNAMIC_TARIFF_PRICE",
                "DYNAMIC_TARIFF_PRICE_FORECAST_1H",
                "DYNAMIC_TARIFF_LOWEST_PRICE_FORECAST_TOMORROW",
                "IS_HIGH_TARIFF_HOURS",
                "ENERGY_EXCESS",
                "ENERGY_BASE_CONSUMPTION",
                "ENERGY_CONSUMPTION_FORECAST_1H",
                "ENERGY_CONSUMPTION_FORECAST_24H",
                "ENERGY_GENERATION",
                "ENERGY_GENERATION_FORECAST_1H",
                "ENERGY_GENERATION_FORECAST_24H",
                "GRID_ENERGY_CONSUMPTION",
                "GRID_ENERGY_CONSUMPTION_YESTERDAY",
                "GRID_ENERGY_CONSUMPTION_ANOMALY_SCORE",
                "GRID_ENERGY_BASE_CONSUMPTION",
                "ENERGY_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
                "ENERGY_GENERATION_FORECAST_TOMORROW",
                "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW_HOURLY",
                "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW",
                "ENERGY_CONSUMPTION_FORECAST_TOMORROW",
                "ENERGY_CONSUMPTION_FORECAST_DAY_AFTER_TOMORROW"
              ]
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "pattern": "^.{1,100}$"
          },
          "stripeId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,32}$"
          },
          "stripeSubscription": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{1,32}$"
          },
          "subscription": {
            "type": "string",
            "enum": [
              "BASIC",
              "PREMIUM",
              "ENTERPRISE"
            ]
          },
          "notificationLanguages": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ar",
                "bg",
                "cs",
                "da",
                "de",
                "el",
                "en",
                "es",
                "et",
                "fi",
                "fr",
                "hu",
                "id",
                "it",
                "ja",
                "ko",
                "lt",
                "lv",
                "no",
                "nl",
                "pl",
                "pt",
                "ro",
                "ru",
                "sk",
                "sl",
                "sv",
                "tr",
                "uk",
                "zh"
              ]
            }
          },
          "eventCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCategory"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "EventCategory": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CHARGING_MODE",
              "DEVICE_STATUS",
              "ENERGY_CONSUMPTION",
              "ENERGY_CONSUMPTION_LAST_24H",
              "ENERGY_CONSUMPTION_YESTERDAY",
              "ENERGY_EXCESS_LAST_24H",
              "ENERGY_EXCESS_YESTERDAY",
              "ENERGY_GENERATION_LAST_24H",
              "ENERGY_GENERATION_YESTERDAY",
              "ENERGY_IMPORT",
              "ENERGY_IMPORT_YESTERDAY",
              "ENERGY_EXPORT",
              "ENERGY_EXPORT_YESTERDAY",
              "EXPECTED_OUTSIDE_TEMPERATURE",
              "EXPECTED_OUTSIDE_TEMPERATURE_4DAYS",
              "GRID_POWER_CONSUMPTION",
              "GRID_POWER_CONSUMPTION_ANOMALY_SCORE",
              "IS_LOW_TARIFF_HOURS",
              "POWER_CONSUMPTION",
              "POWER_CONSUMPTION_FORECAST_1H",
              "POWER_CONSUMPTION_FORECAST_24H",
              "POWER_EXCESS",
              "POWER_GENERATION",
              "POWER_GENERATION_FORECAST_1H",
              "POWER_GENERATION_FORECAST_1H_MIN",
              "POWER_GENERATION_FORECAST_24H",
              "POWER_GENERATION_FORECAST_48H",
              "POWER_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
              "POWER_GENERATION_FORECAST_TOMORROW",
              "SELF_CONSUMPTION_RATE",
              "SELF_CONSUMPTION_RATE_YESTERDAY",
              "SELF_SUFFICIENCY_RATE",
              "SELF_SUFFICIENCY_RATE_YESTERDAY",
              "STATE_OF_CHARGE_FORECAST_RATE",
              "STATE_OF_CHARGE_RATE",
              "SWITCH_STATE",
              "TEMPERATURE",
              "WATER_TEMPERATURE",
              "POWER_CONSUMPTION_BASE_LOAD",
              "DYNAMIC_TARIFF_PRICE",
              "DYNAMIC_TARIFF_PRICE_FORECAST_1H",
              "DYNAMIC_TARIFF_LOWEST_PRICE_FORECAST_TOMORROW",
              "IS_HIGH_TARIFF_HOURS",
              "ENERGY_EXCESS",
              "ENERGY_BASE_CONSUMPTION",
              "ENERGY_CONSUMPTION_FORECAST_1H",
              "ENERGY_CONSUMPTION_FORECAST_24H",
              "ENERGY_GENERATION",
              "ENERGY_GENERATION_FORECAST_1H",
              "ENERGY_GENERATION_FORECAST_24H",
              "GRID_ENERGY_CONSUMPTION",
              "GRID_ENERGY_CONSUMPTION_YESTERDAY",
              "GRID_ENERGY_CONSUMPTION_ANOMALY_SCORE",
              "GRID_ENERGY_BASE_CONSUMPTION",
              "ENERGY_GENERATION_FORECAST_DAY_AFTER_TOMORROW",
              "ENERGY_GENERATION_FORECAST_TOMORROW",
              "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW_HOURLY",
              "GLOBAL_HORIZONTAL_IRRADIATION_FORECAST_TOMORROW",
              "ENERGY_CONSUMPTION_FORECAST_TOMORROW",
              "ENERGY_CONSUMPTION_FORECAST_DAY_AFTER_TOMORROW"
            ]
          },
          "source": {
            "type": "string",
            "enum": [
              "APPLIANCE",
              "BATTERY",
              "CAR",
              "CAR_CHARGER",
              "ENERGY_MEASUREMENT",
              "GATEWAY",
              "HEAT_PUMP",
              "INPUT_DEVICE",
              "INVERTER",
              "MOOST",
              "SMART_METER",
              "SMART_PLUG",
              "SWITCH",
              "THERMOSTAT",
              "THERMAL_ZONE",
              "THERMAL_STORAGE",
              "WATER_HEATER",
              "WALL_TABLET",
              "SOLAR_PANEL",
              "DISHWASHER",
              "DRYER",
              "ENTERTAINMENT",
              "LIGHTING",
              "OVEN",
              "REFRIGERATION",
              "WASHING_MACHINE"
            ]
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "pattern": "^.{0,200}$"
          },
          "isComputed": {
            "type": "boolean"
          }
        },
        "required": [
          "source",
          "type"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "bearerAuth",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}