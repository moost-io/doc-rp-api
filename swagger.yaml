openapi: 3.0.0
info:
  description: |
    This is the API Documentation of the MOOST Recommender System.
    It defines how customers can interact with the System.
  version: "1.0.0"
  title: MOOST Recommender System
  termsOfService: 'https://www.moost.io/terms/agb'
  contact:
    email: info@moost.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: 'https://api.dev.moost.io/'

security:
  - ApiKeyAuth: [ ]

paths:
  /events/v1:
    post:
      tags:
        - Events
      summary: Push a new Event
      operationId: addEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Created - Event received
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

  /fulfillment/{customerId}/preferences/v1:
    post:
      tags:
        - Fulfillment
      summary: Push new preferences for fulfillment for a single customer
      operationId: addPreferences
      parameters:
        - name: customerId
          in: path
          description: 'The id which is used to identify the sending customer. (Is provided by MOOST during on-boarding)'
          required: true
          schema:
            type: string
            example: 'eec0425c-2697-4fa2-b143-5e942378a06f'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPreferences'
      responses:
        '201':
          description: Created - FulfillmentPreferences received
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  responses:
    Unauthorized:
      description: Unauthorized - Authorization information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTP401Unauthorized'
    InternalServerError:
      description: Internal Server Error - something happened
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTP500Error'
    BadRequest:
      description: Bad Request - The Request was malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTP400BadRequest'

  schemas:
    Event:
      type: object
      description: 'An event that is sent to the recommender platform'
      properties:
        timestamp:
          type: integer
          format: int64
          description: 'Timestamp when the event is triggered'
          example: 1589636439
        customerId:
          type: string
          description: 'Unique identifier which is handed to each new customer'
          example: 'e75ff537-fee4-4153-bc5d-be4bc5726dd8'
        user:
          $ref: '#/components/schemas/User'
        device:
          $ref: '#/components/schemas/Device'
        state:
          $ref: '#/components/schemas/State'
        raw:
          type: object
          description: 'The raw event that happened in the customers system'
      required:
        - timestamp
        - customerId
        - type
        - device
        - state
    State:
      type: object
      description: ''
      properties:
        type:
          type: string
          example: 'BRIGHTNESS'
          enum:
            - 'BRIGHTNESS'
            - 'SIGNAL_STRENGTH'
            - 'LOW_BATTERY'
            - 'BATTERY_LEVEL'
            - 'POWER'
            - 'COLOR'
            - 'COLOR_TEMPERATURE'
            - 'LOCATION'
            - 'MOTION'
            - 'MUTE'
            - 'MEDIA_CONTROL'
            - 'MEDIA_TITLE'
            - 'OUTDOOR_TEMPERATURE'
            - 'WIND_DIRECTION'
            - 'WIND_SPEED'
            - 'TEMPERATURE'
            - 'ATMOSPHERIC_HUMIDITY'
            - 'BAROMETRIC_PRESSURE'
            - 'OTHER'
        value_after:
          type: string
#          enum:
#            - 'PRESSED'
#            - 'LONG_PRESSED'
#            - 'DOUBLE_PRESSED'
#            - 'TOUCHED'
#            - 'MAX_TEMPERATURE'
#            - 'MIN_TEMPERATURE'
#            - 'DEFAULT_PLAYLIST'
#            - 'DEFAULT_SOUND_DEVICE'
#            - 'LEAVES_HOME'
#            - 'RETURNS_HOME'
#            - 'WENT_SLEEPING'
#            - 'GET_UP'
#            - 'ON'
#            - 'OFF'
#            - 'STARTED'
#            - 'PAUSED'
#            - 'STOPPED'
#            - 'NONE'
          example: '80'
          description: 'The value after the state has changed'
        value_before:
          type: string
#          enum:
#            - 'PRESSED'
#            - 'LONG_PRESSED'
#            - 'DOUBLE_PRESSED'
#            - 'DOUBLE_PRESSED'
#            - 'DOUBLE_PRESSED'
#            - 'TOUCHED'
#            - 'MAX_TEMPERATURE'
#            - 'MIN_TEMPERATURE'
#            - 'DEFAULT_PLAYLIST'
#            - 'DEFAULT_SOUND_DEVICE'
#            - 'LEAVES_HOME'
#            - 'RETURNS_HOME'
#            - 'WENT_SLEEPING'
#            - 'GET_UP'
#            - 'ON'
#            - 'OFF'
#            - 'STARTED'
#            - 'PAUSED'
#            - 'STOPPED'
          example: '100'
          description: 'The value before the state has changed'
        value_max:
          type: string
          example: '100'
          description: 'The value which indicates what is 100%'
        value_min:
          type: string
          example: '0'
          description: 'The value which inidcates what is 0%'
        additional_information:
          type: string
          enum:
            - 'FAHRENHEIT'
            - 'CELSIUS'
            - 'PERCENTAGE'
            - 'ABSOLUTE'
          example: ''
      required:
        - type
        - value_after
    Device:
      type: object
      description: ''
      properties:
        id:
          type: string
          example: 'cb16399f-af20-428e-ad2f-69380f9f07a2'
          description: 'Identifier to uniquely identify the physical device'
        location:
          type: string
          enum:
            - 'LIVING_ROOM'
            - 'KITCHEN'
            - 'MASTER_BEDROOM'
            - 'BEDROOM'
            - 'TOILETTE'
            - 'SHOWER'
            - 'BATH'
            - 'OFFICE'
            - 'OTHER'
          example: 'LIVING_ROOM'
          description: 'The Location (Room) where the device is placed'
        type:
          type: string
          enum:
            - 'LOUDSPEAKER'
            - 'LIGHT_BULB'
            - 'PRINTER'
            - 'WASHING_MACHINE'
            - 'THERMOSTAT'
            - 'COMPUTER'
            - 'HEATER'
            - 'SMART_BUTTON'
          example: 'LIGHT_BULB'
          description: 'Which type of device produced the occurred event'
        vendor_name:
          type: string
          example: 'LIFX'
        product_name:
          type: string
          example: 'LIFX Mini White'
      required:
        - id
        - location
        - type
    User:
      type: object
      description: 'The end-user for whom this event is generated'
      properties:
        id:
          type: string
          example: '2c6d3036-4dad-4de3-84fe-fafa1971b16f'
          description: 'Identifier to uniquely identify a end-user'
        zip:
          type: string
          example: '8646'
          description: 'ZIP where this event was generated'
        country_code:
          type: string
          example: 'CH'
          description: 'Code of the current users country'
      required:
        - id
    Recommendation:
      type: object
      description: 'The Recommendation Object which is sent to the cloud endpoint of a customer'
      properties:
        customerId:
          type: string
          description: 'ID of the customer to whom we send the recommendation'
          example: 'eec0425c-2697-4fa2-b143-5e942378a06f'
        userId:
          type: string
          description: 'ID of the end-user which we received from the customers system'
          example: 'ba503607-d49b-4042-adee-ae14b3559262'
        title:
          type: object
          description: 'Object containing the texts which should be used as title of the recommendation.'
          properties:
            de:
              type: string
              description: 'The title in german language'
              example: 'Vergiss deinen Schirm nicht!'
            en:
              type: string
              description: 'The title in english language'
              example: 'Do not forget your umbrella!'
        message:
          type: object
          description: 'Object containing the texts which should be used as message text of the recommendation.'
          properties:
            de:
              type: string
              description: 'The message in german language'
              example: 'Der Wetterbericht besagt es beginnt in einer Stunde zu regnen. Nimm besser deinen Schirm mit!'
            en:
              type: string
              description: 'The title in english language'
              example: 'The weather forecast says it will start to rain in an hour. Do not forget your umbrella!'
        priority:
          type: string
          description: 'The priority with which this recommendation should be delivered'
          example: 'High'
        createdAt:
          type: integer
          format: int64
          description: 'Timestamp when the recommendation was initially created by the recommender system.'
          example: 1608299956
    FulfillmentPreferences:
      type: object
      description: 'An object representing the fulfillment preferences for a certain customer'
      properties:
        customerId:
          type: string
          description: 'ID of the customer for which we will set the preferences'
          example: 'eec0425c-2697-4fa2-b143-5e942378a06f'
        type:
          type: string
          enum:
            - 'REST'
          description: 'Defines what kind of fulfillment type the customer requests'
        token:
          type: string
          example: 'xw4tHQPORJddQbelJfka4uhZqN7rKZoE'
      required:
        - customerId
        - type
        - token
    HTTP400BadRequest:
      type: object
      properties:
        code:
          type: string
          example: '400'
          description: 'HTTP Error Code that occurred'
        message:
          type: string
          example: 'Bad Request - the request was malformed.'
          description: 'HTTP Error Message in a human readable way'
      required:
        - code
        - message
    HTTP401Unauthorized:
      type: object
      properties:
        code:
          type: string
          example: '401'
          description: 'HTTP Error Code that occurred'
        message:
          type: string
          example: 'Unauthorized - please provide a valid API token.'
          description: 'HTTP Error Message in a human readable way'
      required:
        - code
        - message
    HTTP500Error:
      type: object
      properties:
        code:
          type: string
          example: '500'
          description: 'HTTP Error Code that occurred'
        message:
          type: string
          example: 'Internal Server Error'
          description: 'HTTP Error Message in a human readable way'
      required:
        - code
        - message